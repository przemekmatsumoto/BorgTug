[global]
slack_webhook_url=your_weebhook_slack_url

[your_name_for_client]
ssh_host=your_ssh_host_configured_in_/home/remote-backup/.ssh/config
socket_remote=/path/where/the/remote/sock/will/be/created # WARNING! User borg must have access to the directory where you are creating the tenc .sock!
socket_local=/path/where/the/local/sock/will/be/created # WARNING! Must be the same as in /etc/systemd/system/your_socket_name.socket on the ListenStream=/path/where/the/sock/will/be/created
borg_binary=borg # Sometimes it is better to give an absolute path, e.g. /usr/bin/borg
socat_binary=socat # Sometimes it is better to give an absolute path, e.g. /usr/bin/socat
passcommand=pass show /path/to/your/pass/password/for/borgbackup/repo # This is just an example of a password manager that works and is configured on the client. Of course it can be configured on the server if you want.
repo=ssh://dummy/path/to/your/new/borgbackup/repository # WARNING! Do not remove ssh://dummy because it is ignored during the backup process. If you had written /path/to/your/borg/repo then /path would be ignored!
dirs=/your/directories/to/be/backupd/from/the/client /you/can/paste/some/ /more/after/space # /path/one /path/two




# Examples:
#
# First example (nas synology):
#
#    [debian1]
#    ssh_host=debian1
#    socket_remote=/tmp/debian1.sock
#    socket_local=/run/remote-backup/debian1.sock
#    borg_binary=borg
#    socat_binary=socat
#    passcommand=pass show repozytoria/borg/debian1
#    repo=ssh://dummy/mnt/backup/debian1
#    dirs=/home/borg/test
#
# Second example (debian):
#
# [nas1]
#    ssh_host=nas1
#    socket_remote=/tmp/nas1.sock
#    socket_local=/run/remote-backup/nas1.sock
#    borg_binary=/opt/bin/borg
#    socat_binary=/opt/bin/socat
#    passcommand=/opt/bin/pass show repozytoria/borg/nas1
#    repo=ssh://dummy/mnt/backup/nas1
#    dirs=/var/services/homes/borg/test