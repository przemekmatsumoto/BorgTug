[global]
slack_webhook_url=your_weebhook_slack_url

[your_name_for_client]
ssh_host=your_ssh_host_configured_in_/home/remote-backup/.ssh/config_file # debian1 for example
socket_remote=/path/where/the/remote/sock/will/be/created
socket_local=/path/where/the/local/sock/will/be/created # WARNING! Must be the same as in /etc/systemd/system/your_socket_name.socket on the ListenStream=/path/where/the/sock/will/be/created
borg_binary=borg
socat_binary=socat
passcommand=pass show /path/to/your/pass/password/for/borgbackup/repo # This is just an example of a password manager that works and is configured on the client. Of course it can be configured on the server if you want.
repo=ssh://dummy/path/to/your/new/borgbackup/repository # WARNING! Do not remove ssh://dummy because it is ignored during the backup process. If you had written /path/to/your/borg/repo then /path would be ignored!
dirs=/your/directories/to/be/backupd/from/the/client /you/can/paste/some/ /more/after/space # path/one /path/two


# more clients if you want:

# [ubuntu2]
# ssh_host=ubuntu2
# socket_remote=/tmp/ubuntu2.sock
# socket_local=/run/remote-backup/ubuntu2.sock
# borg_binary=borg
# socat_binary=socat
# passcommand=pass show repozytoria/borg/ubuntu2
# repo=ssh://dummy/mnt/backup/ubuntu_two
# dirs=/home/borg/test

# [nas_synology1]
# ssh_host=nas_synology1
# socket_remote=/tmp/nas-synology1.sock
# socket_local=/run/remote-backup/nas-synology1.sock
# borg_binary=/opt/bin/borg
# socat_binary=/opt/bin/socat
# passcommand=/opt/bin/pass show repozytoria/borg/nas_synology
# repo=ssh://dummy/mnt/backup/nas_synology_one
# dirs=/root